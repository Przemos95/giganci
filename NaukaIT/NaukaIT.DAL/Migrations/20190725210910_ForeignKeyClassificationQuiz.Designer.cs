// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaukaIT.DAL.Entities;

namespace NaukaIT.DAL.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20190725210910_ForeignKeyClassificationQuiz")]
    partial class ForeignKeyClassificationQuiz
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NaukaIT.DAL.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HTML");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Shortcut");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.ClassGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Day");

                    b.Property<string>("Name");

                    b.Property<string>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("ClassGroups");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.ClassificationInGame", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllAnswers");

                    b.Property<int>("GoodAnswers");

                    b.Property<int>("QuizId");

                    b.Property<int>("Score");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("QuizId");

                    b.ToTable("ClassificationInGame");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message");

                    b.Property<string>("OutEmail");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassGroupId");

                    b.Property<bool>("IsDoc");

                    b.Property<string>("Path");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ClassGroupId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerA");

                    b.Property<string>("AnswerB");

                    b.Property<string>("AnswerC");

                    b.Property<string>("AnswerD");

                    b.Property<string>("Correct")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int>("QuizId");

                    b.Property<string>("Text");

                    b.HasKey("ID");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.Quiz", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassGroupId");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ID");

                    b.HasIndex("ClassGroupId");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Group");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Salt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.UserQuizResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answers");

                    b.Property<int>("QuizId");

                    b.Property<int>("Score");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("UserQuizResults");
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.ClassificationInGame", b =>
                {
                    b.HasOne("NaukaIT.DAL.Entities.Quiz", "Quiz")
                        .WithMany("ClassificationInGame")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.File", b =>
                {
                    b.HasOne("NaukaIT.DAL.Entities.ClassGroup", "ClassGroup")
                        .WithMany("Files")
                        .HasForeignKey("ClassGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.Question", b =>
                {
                    b.HasOne("NaukaIT.DAL.Entities.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.Quiz", b =>
                {
                    b.HasOne("NaukaIT.DAL.Entities.ClassGroup", "ClassGroup")
                        .WithMany("Quizzes")
                        .HasForeignKey("ClassGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NaukaIT.DAL.Entities.UserQuizResult", b =>
                {
                    b.HasOne("NaukaIT.DAL.Entities.Quiz", "Quiz")
                        .WithMany("UserQuizResults")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NaukaIT.DAL.Entities.User", "User")
                        .WithMany("UserQuizResults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
